// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: glue/v1/auth/mfa_factor.proto

package auth

import (
	_ "github.com/open-cloud-initiative/specs/gen/go/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MFAFactorStatus is an enum to represent the current state.
type MFAFactorStatus int32

const (
	// Unspecified is an unspecified state.
	MFAFactorStatus_MFA_FACTOR_STATUS_UNSPECIFIED MFAFactorStatus = 0
	// The factor is in the process of being verified.
	MFAFactorStatus_MFA_FACTOR_STATUS_PENDING MFAFactorStatus = 1
	// The factor has been verified.
	MFAFactorStatus_MFA_FACTOR_STATUS_VERIFIED MFAFactorStatus = 2
	// The factor has been rejected.
	MFAFactorStatus_MFA_FACTOR_STATUS_UNVERIFIED MFAFactorStatus = 3
)

// Enum value maps for MFAFactorStatus.
var (
	MFAFactorStatus_name = map[int32]string{
		0: "MFA_FACTOR_STATUS_UNSPECIFIED",
		1: "MFA_FACTOR_STATUS_PENDING",
		2: "MFA_FACTOR_STATUS_VERIFIED",
		3: "MFA_FACTOR_STATUS_UNVERIFIED",
	}
	MFAFactorStatus_value = map[string]int32{
		"MFA_FACTOR_STATUS_UNSPECIFIED": 0,
		"MFA_FACTOR_STATUS_PENDING":     1,
		"MFA_FACTOR_STATUS_VERIFIED":    2,
		"MFA_FACTOR_STATUS_UNVERIFIED":  3,
	}
)

func (x MFAFactorStatus) Enum() *MFAFactorStatus {
	p := new(MFAFactorStatus)
	*p = x
	return p
}

func (x MFAFactorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MFAFactorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_glue_v1_auth_mfa_factor_proto_enumTypes[0].Descriptor()
}

func (MFAFactorStatus) Type() protoreflect.EnumType {
	return &file_glue_v1_auth_mfa_factor_proto_enumTypes[0]
}

func (x MFAFactorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MFAFactorStatus.Descriptor instead.
func (MFAFactorStatus) EnumDescriptor() ([]byte, []int) {
	return file_glue_v1_auth_mfa_factor_proto_rawDescGZIP(), []int{0}
}

// MFAFactorType is an enum of the allowed types.
type MFAFactorType int32

const (
	// Unspecified is an unspecified type.
	MFAFactorType_FACTOR_TYPE_UNSPECIFIED MFAFactorType = 0
	// The factor is a time-based one-time password.
	MFAFactorType_FACTOR_TYPE_TOTP MFAFactorType = 1
	// The factor is a biometric.
	MFAFactorType_FACTOR_TYPE_BIOMETRIC MFAFactorType = 2
	// The factor is a hardware token.
	MFAFactorType_FACTOR_TYPE_HARDWARE_TOKEN MFAFactorType = 3
)

// Enum value maps for MFAFactorType.
var (
	MFAFactorType_name = map[int32]string{
		0: "FACTOR_TYPE_UNSPECIFIED",
		1: "FACTOR_TYPE_TOTP",
		2: "FACTOR_TYPE_BIOMETRIC",
		3: "FACTOR_TYPE_HARDWARE_TOKEN",
	}
	MFAFactorType_value = map[string]int32{
		"FACTOR_TYPE_UNSPECIFIED":    0,
		"FACTOR_TYPE_TOTP":           1,
		"FACTOR_TYPE_BIOMETRIC":      2,
		"FACTOR_TYPE_HARDWARE_TOKEN": 3,
	}
)

func (x MFAFactorType) Enum() *MFAFactorType {
	p := new(MFAFactorType)
	*p = x
	return p
}

func (x MFAFactorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MFAFactorType) Descriptor() protoreflect.EnumDescriptor {
	return file_glue_v1_auth_mfa_factor_proto_enumTypes[1].Descriptor()
}

func (MFAFactorType) Type() protoreflect.EnumType {
	return &file_glue_v1_auth_mfa_factor_proto_enumTypes[1]
}

func (x MFAFactorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MFAFactorType.Descriptor instead.
func (MFAFactorType) EnumDescriptor() ([]byte, []int) {
	return file_glue_v1_auth_mfa_factor_proto_rawDescGZIP(), []int{1}
}

// Multi Factor
type MFAFactor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status.
	Status MFAFactorStatus `protobuf:"varint,2,opt,name=status,proto3,enum=oci.cloud.glue.v1.auth.MFAFactorStatus" json:"status,omitempty"`
	// Type.
	Type MFAFactorType `protobuf:"varint,3,opt,name=type,proto3,enum=oci.cloud.glue.v1.auth.MFAFactorType" json:"type,omitempty"`
	// Friendly name.
	FriendlyName string `protobuf:"bytes,4,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	// Web Authn credentials.
	WebAuthnCredential []byte `protobuf:"bytes,5,opt,name=web_authn_credential,json=webAuthnCredential,proto3" json:"web_authn_credential,omitempty"`
	// Phone number.
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// Last challenged at.
	LastChallengedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_challenged_at,json=lastChallengedAt,proto3" json:"last_challenged_at,omitempty"`
	// Created at.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Updated at.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Deleted at.
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *MFAFactor) Reset() {
	*x = MFAFactor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_glue_v1_auth_mfa_factor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MFAFactor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MFAFactor) ProtoMessage() {}

func (x *MFAFactor) ProtoReflect() protoreflect.Message {
	mi := &file_glue_v1_auth_mfa_factor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MFAFactor.ProtoReflect.Descriptor instead.
func (*MFAFactor) Descriptor() ([]byte, []int) {
	return file_glue_v1_auth_mfa_factor_proto_rawDescGZIP(), []int{0}
}

func (x *MFAFactor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MFAFactor) GetStatus() MFAFactorStatus {
	if x != nil {
		return x.Status
	}
	return MFAFactorStatus_MFA_FACTOR_STATUS_UNSPECIFIED
}

func (x *MFAFactor) GetType() MFAFactorType {
	if x != nil {
		return x.Type
	}
	return MFAFactorType_FACTOR_TYPE_UNSPECIFIED
}

func (x *MFAFactor) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *MFAFactor) GetWebAuthnCredential() []byte {
	if x != nil {
		return x.WebAuthnCredential
	}
	return nil
}

func (x *MFAFactor) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *MFAFactor) GetLastChallengedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastChallengedAt
	}
	return nil
}

func (x *MFAFactor) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MFAFactor) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MFAFactor) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

var File_glue_v1_auth_mfa_factor_proto protoreflect.FileDescriptor

var file_glue_v1_auth_mfa_factor_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x6c, 0x75, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6d,
	0x66, 0x61, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x6f, 0x63, 0x69, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6c, 0x75, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8c, 0x04, 0x0a, 0x09, 0x4d, 0x46, 0x41, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x6f, 0x63, 0x69, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6c, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x46, 0x41, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x6f, 0x63, 0x69, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6c, 0x75, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x46, 0x41, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12,
	0x77, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x2a, 0x95, 0x01, 0x0a, 0x0f, 0x4d, 0x46, 0x41, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x46, 0x41, 0x5f, 0x46, 0x41, 0x43, 0x54,
	0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x46, 0x41, 0x5f, 0x46,
	0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x46, 0x41, 0x5f, 0x46, 0x41,
	0x43, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x46, 0x41, 0x5f, 0x46, 0x41,
	0x43, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x7d, 0x0a, 0x0d, 0x4d, 0x46, 0x41, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x41, 0x43,
	0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4f, 0x54, 0x50, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x49, 0x4f, 0x4d,
	0x45, 0x54, 0x52, 0x49, 0x43, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x41, 0x43, 0x54, 0x4f,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x5f,
	0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x03, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x6c, 0x75, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_glue_v1_auth_mfa_factor_proto_rawDescOnce sync.Once
	file_glue_v1_auth_mfa_factor_proto_rawDescData = file_glue_v1_auth_mfa_factor_proto_rawDesc
)

func file_glue_v1_auth_mfa_factor_proto_rawDescGZIP() []byte {
	file_glue_v1_auth_mfa_factor_proto_rawDescOnce.Do(func() {
		file_glue_v1_auth_mfa_factor_proto_rawDescData = protoimpl.X.CompressGZIP(file_glue_v1_auth_mfa_factor_proto_rawDescData)
	})
	return file_glue_v1_auth_mfa_factor_proto_rawDescData
}

var file_glue_v1_auth_mfa_factor_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_glue_v1_auth_mfa_factor_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_glue_v1_auth_mfa_factor_proto_goTypes = []interface{}{
	(MFAFactorStatus)(0),          // 0: oci.cloud.glue.v1.auth.MFAFactorStatus
	(MFAFactorType)(0),            // 1: oci.cloud.glue.v1.auth.MFAFactorType
	(*MFAFactor)(nil),             // 2: oci.cloud.glue.v1.auth.MFAFactor
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_glue_v1_auth_mfa_factor_proto_depIdxs = []int32{
	0, // 0: oci.cloud.glue.v1.auth.MFAFactor.status:type_name -> oci.cloud.glue.v1.auth.MFAFactorStatus
	1, // 1: oci.cloud.glue.v1.auth.MFAFactor.type:type_name -> oci.cloud.glue.v1.auth.MFAFactorType
	3, // 2: oci.cloud.glue.v1.auth.MFAFactor.last_challenged_at:type_name -> google.protobuf.Timestamp
	3, // 3: oci.cloud.glue.v1.auth.MFAFactor.created_at:type_name -> google.protobuf.Timestamp
	3, // 4: oci.cloud.glue.v1.auth.MFAFactor.updated_at:type_name -> google.protobuf.Timestamp
	3, // 5: oci.cloud.glue.v1.auth.MFAFactor.deleted_at:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_glue_v1_auth_mfa_factor_proto_init() }
func file_glue_v1_auth_mfa_factor_proto_init() {
	if File_glue_v1_auth_mfa_factor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_glue_v1_auth_mfa_factor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MFAFactor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_glue_v1_auth_mfa_factor_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_glue_v1_auth_mfa_factor_proto_goTypes,
		DependencyIndexes: file_glue_v1_auth_mfa_factor_proto_depIdxs,
		EnumInfos:         file_glue_v1_auth_mfa_factor_proto_enumTypes,
		MessageInfos:      file_glue_v1_auth_mfa_factor_proto_msgTypes,
	}.Build()
	File_glue_v1_auth_mfa_factor_proto = out.File
	file_glue_v1_auth_mfa_factor_proto_rawDesc = nil
	file_glue_v1_auth_mfa_factor_proto_goTypes = nil
	file_glue_v1_auth_mfa_factor_proto_depIdxs = nil
}
